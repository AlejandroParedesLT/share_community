version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: django_backend
    command: ["/app/entrypoint.sh", "gunicorn", "socialmedia.wsgi:application", "--bind", "0.0.0.0:8001"]

    # command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8001:8001"
    depends_on:
      - postgres_db
      # - oracle_db
      # - mongo_db
    env_file:
      - .env

  postgres_db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  # oracle_db:
  #   image: container-registry.oracle.com/database/express:21.3.0-xe
  #   container_name: oracle_db
  #   restart: always
  #   environment:
  #     ORACLE_SID: XE
  #     ORACLE_PDB: XEPDB1
  #     ORACLE_PWD: myoraclepassword
  #   ports:
  #     - "1521:1521"
  #     - "5500:5500"
  #   volumes:
  #     - ./data/oracle:/opt/oracle/oradata
  #   healthcheck:
  #     test: ["CMD", "sqlplus", "-L", "sys/myoraclepassword@//localhost:1521/XEPDB1", "as", "sysdba", "exit"]
  #     interval: 30s
  #     retries: 5
  #     start_period: 60s
  #     timeout: 10s

  # mongo_db:
  #   image: mongo:6
  #   container_name: mongo_db
  #   restart: always
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: mongouser
  #     MONGO_INITDB_ROOT_PASSWORD: mongopassword
  #     MONGO_INITDB_DATABASE: mymongodb
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - ./data/mongo:/data/db

  frontend_react:
    build:
      context: ./frontend/reactFrontendSocialMedia
      dockerfile: Dockerfile
      args:
        TARGET_ENV: ${FRONTEND_ENV}
    container_name: frontend_WebReact
    ports:
      - "${FRONTEND_PORT}:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend/reactFrontendSocialMedia:/app
      - /app/node_modules

  # frontend_reactNative:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #     args:
  #       TARGET_ENV: ${FRONTEND_ENV}
  #   container_name: frontend
  #   ports:
  #     - "${FRONTEND_PORT}:80"
  #   depends_on:
  #     - backend
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules

volumes:
  postgres_data:
  oracle_data:
  mongo_data: